<DevTools>:
    id: devtools
    size_hint: None, None
    size: int(Window.width/1.3), int(Window.height/2)
    pos: 1, int(Window.height/2 - 1)
    devtools: self
    scene: devtools.scene
    road: devtools.road

    # background
    canvas.before:
        Color:
            rgba: (0, 0, 0, .9)
        Rectangle:
            pos: self.pos
            size: self.size

    # left
    Label:
        text: "Dev Tools"
        pos: 40, int(Window.height/1.11)
    Button:
        id: btn_show_map
        text: "Show map"
        pos: 0,  int(Window.height/1.11)
        size: 80, 30
        font_size: 11
        on_press: root.scene.update_map_text()
    Button:
        text: f"Add to Map: {len(root.road.level.visible_map_elem())}"
        pos: 0,  int(Window.height/1.2)
        size: 80, 30
        font_size: 11
        on_press: root.scene.add_to_map()

    # center
    Slider:
        id: slider_map
        min: 0
        max: root.devtools.slider_map_max()  # root.road.total_way if root.road else 0
        value: root.road.distance_traveled if root.road else 0
        pos: 200, int(Window.height/1.11)-30
        width: root.devtools.size[0]/3
    Label:
        text: f"{int(root.ids.slider_map.value)} => {int(root.road.total_way)}" if root.road and root.ids.slider_map else "Slider of map road undefined"
        pos: root.ids.slider_map.pos[0] + self.width, root.ids.slider_map.pos[1] + 10
        font_size: 9

    # right
    Label:
        id: line_map
        text: str(self.center) + root.devtools.map_text() if root.scene else 'Map road undefined'
        markup: True
        valign: "top"
        pos: root.devtools.width-self.width, devtools.y
        size: root.devtools.size[0]/3, devtools.size[1]
        text_size: self.size

