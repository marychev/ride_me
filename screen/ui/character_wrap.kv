#:import Factory kivy.factory.Factory
#:import BorderImage kivy.graphics.vertex_instructions.BorderImage
#:import Line kivy.graphics.vertex_instructions.Line
#:import Rectangle kivy.graphics.vertex_instructions.Rectangle
#:import Currency objects.currency.currency.Currency
#:import UColor utils.color.Color
#:import GOS utils.sizes.GOSize
#:import FS utils.sizes.FontSize


<UpgradePopup@Popup>:
    auto_dismiss: False
    size_hint: .8, .8
    title: 'Title of the upgrade popup'

    BoxLayout:
        orientation: 'vertical'

        Label:
            text: 'Description of the upgrade popup. \r\n Blas blas bla blablas bla blablas bla blablas bla bla'
            multiline: True
            font_size: FS.LEAD.value

        BoxLayout:
            size_hint_y: .5
            padding: 10
            Button:
                text: 'Ok'
                on_release: root.dismiss()
            Button:
                text: 'Close'
                on_press: root.dismiss()


<CharBtn@Button>:
    disabled: True
    opacity: 0.1
    font_size: FS.XSMALL.value
    disabled: True
    size_hint_x: None
    width: self.size[0]
    on_release: Factory.UpgradePopup().open()

<CharacterWrap>:
    orientation: "vertical"
    height: GOS.HEIGHT_CharacterWrap.value
    width: GOS.WIDTH_CharacterWrap.value
    size_hint: None, None
    has_value: self.has_value
    key: self.key
    value: self.value
    max: self.max
    title: self.title

    BoxLayout:
        Label:
            text: str(root.title)
            color: UColor.hex(UColor.GRAY)
            font_size: FS.NORMAL.value
            markup: True
        CharBtn:
            text: "Upgrade"
            opacity: self.opacity if root.has_value else 0.2


    BoxLayout:
        orientation: "vertical"
        ProgressBar:
            height: GOS.HEIGHT_CharacterWrap.value
            size_hint: 1, None
            # pos: (root.pos[0], root.pos[1]) if root.has_value else (0, 0)
            value: int(root.value)
            max: int(root.max) + 100

            canvas:
                Color:
                    rgba: 0, 0, 0, .8
                Line:
                    points: self.x, self.y+35, self.x + self.parent.width, self.y+35
                    width: 1 if root.has_value else 2
